{% extends 'OroUIBundle:actions:update.html.twig' %}
{% import 'OroDataGridBundle::macros.html.twig' as dataGrid %}

{% form_theme form with ['OroFormBundle:Form:fields.html.twig'] %}

{% set name = 'N/A' %}
{% if entity.name %}
    {% set name = is_granted('VIEW', entity, 'name')
        ? entity.name|default('N/A')
        : 'view %fieldName% not granted'|trans({'%fieldName%': 'Contract'})
    %}
{% endif %}
{% set entityId = form.vars.value.id %}
{% oro_title_set({params : {"%contract.name%": name }}) %}
{% set gridName = 'contract-projects-grid' %}

{% set formAction = form.vars.value.id ? path('fm_contract_update', { 'id': form.vars.value.id }) : path('fm_contract_create')  %}

{% block head_script %}
    {{ parent() }}
    {% block stylesheets %}
        {{ form_stylesheet(form) }}
    {% endblock %}
{% endblock %}

{% block navButtons %}
    {{ UI.cancelButton(path('fm_contract_index')) }}
    {% set html = UI.saveAndCloseButton({
        'route': 'fm_contract_view',
        'params': {'id': '$id'}
    }) %}
    {% if is_granted('fm_contract_create') %}
        {% set html = html ~ UI.saveAndNewButton({
            'route': 'fm_contract_create'
        }) %}
    {% endif %}
    {% if form.vars.value.id or is_granted('fm_contract_update') %}
        {% set html = html ~ UI.saveAndStayButton({
            'route': 'fm_contract_update',
            'params': {'id': '$id'}
        }) %}
    {% endif %}
    {{ UI.dropdownSaveButton({'html': html}) }}
{% endblock %}

{% block pageHeader %}
    {% if form.vars.value.id %}
        {% set name = 'N/A' %}
        {% if form.vars.value.name %}
            {% set name = is_granted('VIEW', form.vars.value, 'name')
                ? form.vars.value.name|default('N/A')
                : UI.renderDisabledLabel('view %fieldName% not granted'|trans({'%fieldName%': 'Contract'}))
            %}
        {% endif %}
        {% set breadcrumbs = {
            'entity':      form.vars.value,
            'indexPath':   path('fm_contract_index'),
            'indexLabel': 'Contracts',
            'entityTitle': name
        }
        %}
        {{ parent() }}
    {% else %}
        {% set title = 'oro.ui.create_entity'|trans({'%entityName%': 'Contract'}) %}
        {% include 'OroUIBundle::page_title_block.html.twig' with { title: title } %}
    {% endif %}
{% endblock pageHeader %}

{% block content_data %}
    {% set id = 'contract-profile' %}

    {% set dataBlocks = [{
        'title': 'General'|trans,
        'class': 'active',
        'subblocks': [
            {
                'title': 'Basic Information',
                'data': [
                    form_row(form.assignedTo),
                    form_row(form.name),
                    form_row(form.status),
                    form_row(form.amount),
                    form_row(form.launchedAt),
                    form_row(form.expiredAt),
                ]
            },
            {
                'title': '',
                'data': [
                    form_row(form.description),
                    form_widget(form.appendProjects, {'id': 'contractAppendProjects'}),
                    form_widget(form.removeProjects, {'id': 'contractRemoveProjects'}),
                ]
            }
        ]
    }] %}

    {% set additionalData = [] %}
    {% for child in form.children if child.vars.extra_field is defined and child.vars.extra_field %}
        {% set additionalData = additionalData|merge([form_row(child)]) %}
    {% endfor %}
    {% if additionalData is not empty %}
        {% set dataBlocks = dataBlocks|merge([{
            'title': 'Additional'|trans,
            'subblocks': [{
                'title': '',
                'useSpan': false,
                'data' : additionalData
            }]
        }] ) %}
    {% endif %}

    {% set dataBlocks = dataBlocks|merge([{
        'title' : 'Projects',
        'subblocks': [{
            'title' : null,
            'useSpan': false,
            'data' : [dataGrid.renderGrid(gridName, {contract_id: entityId}, { cssClass: 'inner-grid' })]
        }]
    }] ) %}

    {% set data = {
        'formErrors': form_errors(form) ? form_errors(form) : null,
        'dataBlocks': dataBlocks,
    } %}
    <div class="responsive-form-inner">
        {{ parent() }}
    </div>
{% endblock content_data %}
